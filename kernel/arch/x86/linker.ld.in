/*
 * Copyright (C) 2018 Jake Shilling <shilling.jake@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
#include <arch/cdefs.h>

#if __x86_64__
#  define FORMAT  "elf64-x86-64"
#else
#  define FORMAT  "elf32-i386"
#endif /* __x86_64__ */

#define ASM_FILE 1
#include <multiboot.h>
#define MULTIBOOT_HEADER_FLAGS \
  (MULTIBOOT_PAGE_ALIGN | MULTIBOOT_MEMORY_INFO | MULTIBOOT_VIDEO_MODE)

OUTPUT_FORMAT(FORMAT)
ENTRY(_start)

mb_magic = MULTIBOOT_HEADER_MAGIC;
mb_flags = MULTIBOOT_HEADER_FLAGS;
mb_checksum = -(mb_magic + mb_flags);

PHDRS
{
  init PT_LOAD FILEHDR;
}

SECTIONS {

  _kernel_start = KERNEL_VMA;
  .init (KERNEL_VMA + SIZEOF_HEADERS) : AT(ADDR(.init) - KERNEL_VBASE)
  {
    . = ALIGN(16);
    LONG(mb_magic);
    LONG(mb_flags);
    LONG(mb_checksum);
  } :init

  .text ALIGN(4K):
  {
    *(.text)
  }

  .rodata ALIGN(4K):
  {
    *(.rodata)
  }

  .data ALIGN(4K):
  {
    *(.data)
  }

  .bss ALIGN(4K):
  {
    *(COMMON)
    *(.bss)
  }

  _kernel_end = .;
  kernel_size = _kernel_end - _kernel_start;
}
